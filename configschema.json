{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",

  "properties": {
    "twitter": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The numeric userid of the Twitter account that owns these API keys. http://mytwitterid.com/"
        },
        "consumerKey": {
          "type": "string"
        },
        "consumerSecret": {
          "type": "string"
        },
        "accessTokenKey": {
          "type": "string"
        },
        "accessTokenSecret": {
          "type": "string"
        }
      },
      "required": ["userId", "consumerKey", "consumerSecret", "accessTokenKey", "accessTokenSecret"]
    },
    "lastfm": {
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "targetAccount": {
          "type": "string"
        }
      },
      "description": "Configuration object for Last.fm API, used by nowplaying graphic.",
      "required": ["apiKey", "secret", "targetAccount"]
    },
    "debug": {
      "type": "boolean",
      "default": false,
      "description": "Whether or not to enable the client-side debug logging."
    },
    "shaolinbot": {
      "type": "object",
      "properties": {
        "config": {
          "type": "object",
          "viewers": {
            "type": "string",
            "default": "http://tmi.twitch.tv/group/user/{channel}/chatters",
            "description": "Twitch url where to download viewers active in chat"
          },
          "mods": {
            "type": "string",
            "description": "; based name list of allowed users to control the bot. Ex: user1;user"
          },
          "channel": {
            "type": "string",
            "description": "channel to join"
          },
          "account": {
            "type": "string",
            "description": "account for twitch chat"
          },
          "pass": {
            "type": "string",
            "description": "oauth based password from http://twitchapps.com/tmi/"
          },
          "required": ["viewers", "mods", "channel", "account", "pass"]
        },
        "rewards": {
          "type": "object",
          "blacklist": {
            "type": "string",
            "description": "; based name list of banned users from gaining mmr. Ex: user1;user"
          },
          "initial": {
            "type": "string",
            "description": "Initial mmr value given to new players. Ex: 0;1000"
          },
          "interval_bets": {
            "type": "integer",
            "default": 5,
            "description": "Number of times to announce odds before close"
          },
          "interval_between_bets": {
            "type": "integer",
            "default": 60,
            "description": "Interval in seconds between announces"
          },
          "interval_mmr": {
            "type": "integer",
            "default": 10,
            "description": "Interval in seconds between requests to get viewer list"
          },
          "interval_bonus": {
            "type": "integer",
            "default": 180,
            "description": "Number of requests before give bonus mmr"
          },
          "interval_bonus_mmr": {
            "type": "integer",
            "default": 1000,
            "description": "Bonus mmr value for a given player"
          },
          "points": {
            "type": "integer",
            "default": 2,
            "description": "Points per request for viewers"
          },
          "required": ["initial", "interval_bets", "interval_between_bets", "interval_mmr", "interval_bonus", "interval_bonus_mmr", "points"]
        },
        "greetings": {
          "type": "array",
          "items": {
            "type": "object",
            "trigger": {
              "type": "string",
              "description": "token joinned by ';' to fire a message. Ex: token;token2;token3"
            },
            "message": {
              "type": "string",
              "description": "message joinned by ';' to be randomly selected. Ex: resp;resp2"
            }
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "object",
            "trigger": {
              "type": "string",
              "description": "token to fire a command"
            },
            "message": {
              "type": "string",
              "description": "string return of the given command"
            },
            "visible": {
              "type": "boolean",
              "description": "Option if anyone in the chat can trigger the command"
            }
          },
          "uniqueItems": true
        }
      },
      "description": "Config object for node version of github.com/admshao/shaolin-twitch-bot",
      "required": ["config", "rewards", "greetings", "commands"]
    }
  }
}
